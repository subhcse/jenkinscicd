pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/spring-petclinic/spring-framework-petclinic.git'
            }
        }
        stage('OWASP Dependency-Check') {
            steps {
                script {
                    try {
                        sh 'dependency-check.sh --project spring-framework-petclinic --scan ./target/spring-framework-petclinic-2.6.0.BUILD-SNAPSHOT.war --out ./dependency-check-report --format HTML'
                    } catch (err) {
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t spring-framework-petclinic .'
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    def dockerCredentials = [
                        username: 'your-dockerhub-username',
                        password: 'your-dockerhub-password'
                    ]
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
                        sh 'docker tag spring-framework-petclinic your-dockerhub-username/spring-framework-petclinic'
                        sh 'docker push your-dockerhub-username/spring-framework-petclinic'
                    }
                }
            }
        }
    }
}